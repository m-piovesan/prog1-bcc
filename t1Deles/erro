==8875== Memcheck, a memory error detector
==8875== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8875== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8875== Command: ./teste
==8875== 
==8875== Invalid read of size 4
==8875==    at 0x10ACC1: compr_agenda (libagenda.c:573)
==8875==    by 0x1096A7: trabalha_firma_mes (agenda.c:133)
==8875==    by 0x109B60: main (agenda.c:218)
==8875==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8875== 
==8875== 
==8875== Process terminating with default action of signal 11 (SIGSEGV)
==8875==  Access not within mapped region at address 0x0
==8875==    at 0x10ACC1: compr_agenda (libagenda.c:573)
==8875==    by 0x1096A7: trabalha_firma_mes (agenda.c:133)
==8875==    by 0x109B60: main (agenda.c:218)
==8875==  If you believe this happened as a result of a stack
==8875==  overflow in your program's main thread (unlikely but
==8875==  possible), you can try to increase the size of the
==8875==  main thread stack using the --main-stacksize= flag.
==8875==  The main thread stack size used in this run was 8388608.
==8875== 
==8875== HEAP SUMMARY:
==8875==     in use at exit: 680,549 bytes in 20,808 blocks
==8875==   total heap usage: 21,038 allocs, 230 frees, 688,254 bytes allocated
==8875== 
==8875== LEAK SUMMARY:
==8875==    definitely lost: 228,672 bytes in 7,146 blocks
==8875==    indirectly lost: 250,110 bytes in 7,146 blocks
==8875==      possibly lost: 0 bytes in 0 blocks
==8875==    still reachable: 201,767 bytes in 6,516 blocks
==8875==         suppressed: 0 bytes in 0 blocks
==8875== Rerun with --leak-check=full to see details of leaked memory
==8875== 
==8875== For lists of detected and suppressed errors, rerun with: -s
==8875== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
